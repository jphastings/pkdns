name: Pipeline

on:
  pull_request:
    branches:
      - "*"

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  build:
    name: Build & Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup environment
        id: setup
        uses: ./.github/actions/setup
      
      # Prepare for publishing Docker images
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # Build & release
      - uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_IMAGE_NAME: ghcr.io/${{ github.repository }}

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Setup environment
        id: setup
        uses: ./.github/actions/setup
      - name: Run Tests
        run: cargo test --verbose


  format:
    name: Check Format
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v2
      - name: Setup environment
        id: setup
        uses: ./.github/actions/setup
      - name: Run Rustfmt (Code Formatting)
        run: cargo fmt --all -- --check

      # - name: Run Clippy (Lint)
      #   run: cargo clippy --all-targets --all-features -- -D warnings